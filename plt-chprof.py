import sunpy.visualization.colormaps
import scipy.signal

chprof0 = np.load('dat/chprof0.npy')
chprof = np.load('dat/chprof.npy')
improf = np.load('dat/improf.npy')
sfxprof = np.load('dat/sfxprof.npy')
ufxprof = np.load('dat/ufxprof.npy')
crs = np.load('dat/crs.npy')

# 1920x1080 recommended size

f, (ax) = subplots(1, figsize=[6,2.5])
im = ax.imshow(chprof0, extent=[crs[0],crs[-1], -90, 90], aspect='auto')
cb = colorbar(im, ax=ax, label='Fractional CH Coverage')
ax.set_xlabel('Carrington Rotation')
ax.set_ylabel('Latitude')
tight_layout()
savefig('plt/chprof0.pdf')
savefig('plt/chprof0.png', dpi=300)

f, (ax) = subplots(1, figsize=[6,2.5])
im = ax.imshow(chprof, extent=[crs[0],crs[-1], -90, 90], aspect='auto')
cb = colorbar(im, ax=ax, label='CH Coverage')
ax.set_xlabel('Carrington Rotation')
ax.set_ylabel('Latitude')
tight_layout()
savefig('plt/chprof.pdf')
savefig('plt/chprof.png', dpi=300)

f, (ax) = subplots(1, figsize=[6,2.5])
im = ax.imshow(improf, extent=[crs[0],crs[-1], -90, 90], aspect='auto', cmap=sunpy.visualization.colormaps.cm.sdoaia193)
cb = colorbar(im, ax=ax, label='Input EUV Data')
ax.set_xlabel('Carrington Rotation')
ax.set_ylabel('Latitude')
tight_layout()
savefig('plt/improf.pdf')
savefig('plt/improf.png', dpi=300)

f, (ax) = subplots(1, figsize=[6,2.5])
im = ax.imshow(sfxprof, extent=[crs[0],crs[-1], -90, 90], aspect='auto', cmap='RdBu_r', vmin=-1e20, vmax=1e20)
cb = colorbar(im, ax=ax, label='CH Signed Flux [Mx]', extend='both')
ax.set_xlabel('Carrington Rotation')
ax.set_ylabel('Latitude')
tight_layout()
savefig('plt/sfxprof.pdf')
savefig('plt/sfxprof.png', dpi=300)

f, (ax) = subplots(1, figsize=[6,2.5])
im = ax.imshow(ufxprof, extent=[crs[0],crs[-1], -90, 90], aspect='auto', cmap='magma')
cb = colorbar(im, ax=ax, label='CH Unsigned Flux [Mx]')
ax.set_xlabel('Carrington Rotation')
ax.set_ylabel('Latitude')
tight_layout()
savefig('plt/ufxprof.pdf')
savefig('plt/ufxprof.png', dpi=300)

f, (ax) = subplots(1, figsize=[6,2.5])
ax.plot(crs, ufxprof[:,:].sum(0), 'w', label='Total')
ax.plot(crs, ufxprof[0:140,:].sum(0), label='SP')
ax.plot(crs, ufxprof[580:719,:].sum(0), label='NP')
ax.plot(crs, ufxprof[141:579,:].sum(0), label='EQ')
#gw = scipy.signal.gaussian(10,std=3)
#ax.plot(crs, scipy.signal.convolve(ufxprof[:,:].sum(0), gw/gw.sum(), mode='same'), 'k')
#ax.plot(crs, scipy.signal.convolve(ufxprof[0:140,:].sum(0), gw/gw.sum(), mode='same'))
#ax.plot(crs, scipy.signal.convolve(ufxprof[580:719,:].sum(0), gw/gw.sum(), mode='same'))
#ax.plot(crs, scipy.signal.convolve(ufxprof[141:579,:].sum(0), gw/gw.sum(), mode='same'))
ax.legend(ncol=2, loc=2)
ax.set_xlabel('Carrington Rotation')
ax.set_ylabel('Unsigned CH Magnetic Flux [Mx]')
tight_layout()
savefig('plt/flx.pdf')
savefig('plt/flx.png', dpi=300)
